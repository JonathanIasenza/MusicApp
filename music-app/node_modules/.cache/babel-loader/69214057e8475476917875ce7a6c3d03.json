{"ast":null,"code":"var _jsxFileName = \"E:\\\\BunyRapeer\\\\Programaci\\xF3n\\\\Proyectos JavaScript y React\\\\music-app\\\\music-app\\\\src\\\\components\\\\ListBands.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/ListBands.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Loading from \"./Loading\";\nimport Form from \"react-bootstrap/Form\";\nimport TableComponent from './TableBands';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListBands extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      bands: [],\n      allData: false\n    };\n\n    this.bands = async () => {\n      let res = await fetch(\"https://my-json-server.typicode.com/improvein/dev-challenge/db\");\n      let bands = await res.json();\n      this.setState({\n        bands\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.bands();\n  }\n\n  // const [bands, setBands] = useState([]);\n  // const [allData, setAllData] = useState(false);  \n  // useEffect(() => {\n  //   obtainData();\n  // }, []);\n  // const obtainData = async () => {\n  //   const data = await fetch(\n  //     \"https://my-json-server.typicode.com/improvein/dev-challenge/db\"\n  //   );\n  //   const bandsName = await data.json();\n  //   setBands(bandsName.bands);\n  //   setAllData(true);\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bands-title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xB4Total Bands: \", bands.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"check-container\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Rock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Rock and Roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Hard Rock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Grunge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Heavy Metal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Power Metal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Black Metal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"ProgressMetal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), !allData ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-bands\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(TableComponent, {\n            data: bands,\n            sortBy: bands.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\n;\nexport default ListBands;","map":{"version":3,"sources":["E:/BunyRapeer/Programación/Proyectos JavaScript y React/music-app/music-app/src/components/ListBands.jsx"],"names":["React","useState","useEffect","Loading","Form","TableComponent","ListBands","Component","state","data","bands","allData","res","fetch","json","setState","componentDidMount","render","length","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,sBAAP;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,cAAP,MAA2B,cAA3B;;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC/B;AACJC,MAAAA,IAAI,EAAC,EADD;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAD+B;;AAAA,SAWvCD,KAXuC,GAW/B,YAAY;AAClB,UAAIE,GAAG,GAAG,MAAMC,KAAK,CAAC,gEAAD,CAArB;AACA,UAAIH,KAAK,GAAG,MAAME,GAAG,CAACE,IAAJ,EAAlB;AAEA,WAAKC,QAAL,CAAc;AACZL,QAAAA;AADY,OAAd;AAGD,KAlBsC;AAAA;;AAOhB,QAAjBM,iBAAiB,GAAG;AACxB,UAAM,KAAKN,KAAL,EAAN;AACD;;AAYC;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEFO,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,+BACE;AAAA,0CAAkBP,KAAK,CAACQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAU,QAAA,SAAS,EAAC,iBAApB;AAAA,+BACE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,OAAtB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,EAgBG,CAACP,OAAD,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAA,iCACA,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAED,KAAtB;AAA6B,YAAA,MAAM,EAAEA,KAAK,CAACS;AAA3C;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAlEsC;;AAmEtC;AAED,eAAeb,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/ListBands.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Loading from \"./Loading\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport TableComponent from './TableBands'\r\n\r\nclass ListBands extends React.Component{\r\n  state={\r\n    data:[],\r\n    bands: [],\r\n    allData: false\r\n  }\r\n\r\nasync componentDidMount() {\r\n  await this.bands()\r\n}\r\n\r\nbands = async () => {\r\n  let res = await fetch(\"https://my-json-server.typicode.com/improvein/dev-challenge/db\");\r\n  let bands = await res.json()\r\n\r\n  this.setState({\r\n    bands\r\n  })\r\n}\r\n\r\n\r\n  // const [bands, setBands] = useState([]);\r\n  // const [allData, setAllData] = useState(false);  \r\n\r\n  // useEffect(() => {\r\n  //   obtainData();\r\n  // }, []);\r\n\r\n  // const obtainData = async () => {\r\n  //   const data = await fetch(\r\n  //     \"https://my-json-server.typicode.com/improvein/dev-challenge/db\"\r\n  //   );\r\n  //   const bandsName = await data.json();\r\n  //   setBands(bandsName.bands);\r\n  //   setAllData(true);\r\n  // };\r\n\r\nrender(){\r\n  return (\r\n    <div className=\"container-list\">\r\n      <div id=\"bands-title\">\r\n        <p>´Total Bands: {bands.length}</p>\r\n      </div>\r\n      <fieldset className=\"check-container\">\r\n        <Form.Group>\r\n          <Form.Check className=\"check\" type=\"checkbox\" label=\"Rock\" />\r\n          <Form.Check className=\"check\" type=\"checkbox\" label=\"Rock and Roll\" />\r\n          <Form.Check className=\"check\" type=\"checkbox\" label=\"Hard Rock\" />\r\n          <Form.Check className=\"check\" type=\"checkbox\" label=\"Grunge\" />\r\n          <Form.Check className=\"check\" type=\"checkbox\" label=\"Heavy Metal\" />\r\n          <Form.Check className=\"check\" type=\"checkbox\" label=\"Power Metal\" />\r\n          <Form.Check className=\"check\" type=\"checkbox\" label=\"Black Metal\" />\r\n          <Form.Check className=\"check\" type=\"checkbox\" label=\"ProgressMetal\" />\r\n        </Form.Group>\r\n      </fieldset>\r\n      {!allData ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"list-bands\">\r\n          <ul>\r\n          <TableComponent data={bands} sortBy={bands.id}/>\r\n          </ul> \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n};\r\n\r\nexport default ListBands;\r\n"]},"metadata":{},"sourceType":"module"}