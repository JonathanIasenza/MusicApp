{"ast":null,"code":"var _jsxFileName = \"E:\\\\BunyRapeer\\\\Programaci\\xF3n\\\\Proyectos JavaScript y React\\\\music-app\\\\music-app\\\\src\\\\components\\\\Bands.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/Bands.css\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bands = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [infoBands, setInfoBands] = useState([]);\n  const [membersBand, setMembersBand] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const [allData, setAllData] = useState(false);\n  useEffect(() => {\n    /*1st fetch*/\n    const obtainDatas = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`);\n      const users = await data.json();\n      setInfoBands(users);\n    };\n    /*2nd fetch*/\n\n\n    const obtainMembers = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`);\n      const memb = await data.json();\n      setMembersBand(memb.members);\n      setAllData(true);\n    };\n    /*3rd fetch*/\n\n\n    const obtainAlbums = async () => {\n      const dataAlbum = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/db`);\n      const album = await dataAlbum.json();\n      setAlbums(album.albums);\n    };\n\n    obtainAlbums();\n    obtainDatas();\n    obtainMembers([]);\n  }, [id]); //   function showAlbums(){\n  //   if(infoBands.id === albums.map((albumId)=> (<h2>parseInt({albumId.bandId})</h2>))){\n  //     return albums.map((albumName)=> (<h2>{albumName.name}</h2>))\n  //   }else{\n  //     document.getElementById('no-albums').style.display = 'block'\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-bands\",\n    children: !allData ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \"Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), \" \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 12\n        }, this), \" \", infoBands.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), \" \", infoBands.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \" Country: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \" \", infoBands.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \" Genre: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), infoBands.genreCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Albums: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"no-albums\",\n        style: {\n          display: 'none'\n        },\n        children: \"No albums availables from this band.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"members\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"members-title\",\n          children: \"Members:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), membersBand.map(member => /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bands, \"Hr1F66hGuLLinhTopH0DHTy9yEU=\", false, function () {\n  return [useParams];\n});\n\n_c = Bands;\nexport default Bands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bands\");","map":{"version":3,"sources":["E:/BunyRapeer/Programaci√≥n/Proyectos JavaScript y React/music-app/music-app/src/components/Bands.jsx"],"names":["React","useState","useEffect","useParams","Loading","Bands","id","infoBands","setInfoBands","membersBand","setMembersBand","albums","setAlbums","allData","setAllData","obtainDatas","data","fetch","users","json","obtainMembers","memb","members","obtainAlbums","dataAlbum","album","name","year","country","genreCode","display","map","member"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../css/Bands.css\";\r\nimport Loading from \"./Loading\";\r\n\r\n\r\nconst Bands = () => {\r\n  const { id } = useParams();\r\n  const [infoBands, setInfoBands] = useState([]);\r\n  const [membersBand, setMembersBand] = useState([]);\r\n  const [albums, setAlbums] = useState([]);\r\n  const [allData, setAllData] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n      /*1st fetch*/\r\n\r\n    const obtainDatas = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`\r\n      );\r\n\r\n      const users = await data.json();\r\n      setInfoBands(users);    \r\n    };\r\n     \r\n    /*2nd fetch*/\r\n\r\n    const obtainMembers = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`\r\n      );\r\n\r\n      const memb = await data.json();\r\n      setMembersBand(memb.members);\r\n      setAllData(true);    \r\n\r\n    };\r\n\r\n\r\n        /*3rd fetch*/\r\n\r\n        const obtainAlbums = async () => {\r\n          const dataAlbum = await fetch(\r\n            `https://my-json-server.typicode.com/improvein/dev-challenge/db`\r\n          );\r\n    \r\n          const album = await dataAlbum.json();\r\n          setAlbums(album.albums);    \r\n        };\r\n\r\n    obtainAlbums();\r\n    obtainDatas();\r\n    obtainMembers([]);\r\n  }, [id]);\r\n\r\n//   function showAlbums(){\r\n//   if(infoBands.id === albums.map((albumId)=> (<h2>parseInt({albumId.bandId})</h2>))){\r\n//     return albums.map((albumName)=> (<h2>{albumName.name}</h2>))\r\n//   }else{\r\n//     document.getElementById('no-albums').style.display = 'block'\r\n//   }\r\n// }\r\n\r\n  return (\r\n    <div className=\"container-bands\">\r\n      {!allData ? (\r\n        <Loading />\r\n      ) : (\r\n      <div className=\"container-info\">\r\n      <h1><b className=\"info-band\">Number:</b> {id}</h1>\r\n      <h1> <b className=\"info-band\">Name: </b> {infoBands.name}</h1>\r\n      <h1><b className=\"info-band\">Year:</b> {infoBands.year}</h1>\r\n      <h1><b className=\"info-band\"> Country: </b> {infoBands.country}</h1>\r\n      <h1><b className=\"info-band\"> Genre: </b>{infoBands.genreCode}</h1>\r\n      <br/>\r\n      <h1>Albums: </h1>\r\n      <br/>\r\n      <h2 id=\"no-albums\" style={{display:'none'}}>No albums availables from this band.</h2>\r\n      <br/>\r\n      <div className=\"members\">\r\n      <h1 id=\"members-title\">Members:</h1>\r\n      <br/>\r\n       {membersBand.map((member) => (\r\n        <h2><ul><li>{member.name}</li></ul></h2>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bands;\r\n"]},"metadata":{},"sourceType":"module"}