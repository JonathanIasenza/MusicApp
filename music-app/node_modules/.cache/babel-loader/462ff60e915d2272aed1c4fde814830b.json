{"ast":null,"code":"var _jsxFileName = \"E:\\\\BunyRapeer\\\\Programaci\\xF3n\\\\Proyectos JavaScript y React\\\\music-app\\\\music-app\\\\src\\\\components\\\\ListBands.jsx\";\n// import React, { useState, useEffect } from \"react\";\n// import \"../css/ListBands.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import Loading from \"./Loading\";\n// import Form from \"react-bootstrap/Form\";\n// import TableComponent from './TableBands'\n// const ListBands = () => {\n//   const [bands, setBands] = useState([]);\n//   const [allData, setAllData] = useState(false);  \n//   useEffect(() => {\n//     obtainData();\n//   }, []);\n//   const obtainData = async () => {\n//     const data = await fetch(\n//       \"https://my-json-server.typicode.com/improvein/dev-challenge/db\"\n//     );\n//     const bandsName = await data.json();\n//     setBands(bandsName.bands);\n//     setAllData(true);\n//   };\n//   return (\n//     <div className=\"container-list\">\n//       <div id=\"bands-title\">\n//         <p>´Total Bands: {bands.length}</p>\n//       </div>\n//       <fieldset className=\"check-container\">\n//         <Form.Group>\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Rock\" />\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Rock and Roll\" />\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Hard Rock\" />\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Grunge\" />\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Heavy Metal\" />\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Power Metal\" />\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Black Metal\" />\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"ProgressMetal\" />\n//         </Form.Group>\n//       </fieldset>\n//       {!allData ? (\n//         <Loading />\n//       ) : (\n//         <div className=\"list-bands\">\n//           <ul>\n//           <TableComponent data={bands} sortBy={bands.name}/>\n//           </ul> \n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default ListBands;\nimport React from 'react';\nimport TableBands from './TableBands';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListBands extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async () => {\n      let res = await fetch('https://my-json-server.typicode.com/improvein/dev-challenge/bands');\n      let data = await res.json();\n      this.setState({\n        data\n      });\n    };\n\n    this.state = {\n      data: [],\n      direction: {\n        id: 'asc',\n        year: 'asc',\n        name: 'asc'\n      }\n    };\n    this.sortBy = this.sortBy.bind(this);\n  }\n\n  sortBy(key) {\n    this.setState({\n      data: this.state.data.sort((a, b) => this.state.direction[key] === 'asc' ? parseInt(a[key]) - parseInt(b[key]) : parseInt(b[key]) - parseInt(a[key])),\n      direction: {\n        [key]: this.state.direction[key] === 'asc' ? 'desc' : 'asc'\n      }\n    });\n  }\n\n  async componentDidMount() {\n    await this.fetchData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bands-title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xB4Total Bands: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-container\",\n        children: /*#__PURE__*/_jsxDEV(TableBands, {\n          data: this.state.data,\n          sortBy: this.sortBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ListBands;","map":{"version":3,"sources":["E:/BunyRapeer/Programación/Proyectos JavaScript y React/music-app/music-app/src/components/ListBands.jsx"],"names":["React","TableBands","ListBands","Component","constructor","props","fetchData","res","fetch","data","json","setState","state","direction","id","year","name","sortBy","bind","key","sort","a","b","parseInt","componentDidMount","render","length"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAuC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SA8BlBC,SA9BkB,GA8BN,YAAY;AACtB,UAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,mEAAD,CAArB;AACA,UAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA;AADY,OAAd;AAGD,KApCiB;;AAEhB,SAAKG,KAAL,GAAW;AACTH,MAAAA,IAAI,EAAC,EADI;AAETI,MAAAA,SAAS,EAAE;AACTC,QAAAA,EAAE,EAAC,KADM;AAETC,QAAAA,IAAI,EAAC,KAFI;AAGTC,QAAAA,IAAI,EAAE;AAHG;AAFF,KAAX;AASA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDD,EAAAA,MAAM,CAACE,GAAD,EAAK;AACT,SAAKR,QAAL,CAAc;AACZF,MAAAA,IAAI,EAAE,KAAKG,KAAL,CAAWH,IAAX,CAAgBW,IAAhB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAC1B,KAAKV,KAAL,CAAWC,SAAX,CAAqBM,GAArB,MAA8B,KAA9B,GACEI,QAAQ,CAACF,CAAC,CAACF,GAAD,CAAF,CAAR,GAAmBI,QAAQ,CAACD,CAAC,CAACH,GAAD,CAAF,CAD7B,GAEEI,QAAQ,CAACD,CAAC,CAACH,GAAD,CAAF,CAAR,GAAmBI,QAAQ,CAACF,CAAC,CAACF,GAAD,CAAF,CAHzB,CADM;AAMVN,MAAAA,SAAS,EAAE;AACT,SAACM,GAAD,GAAO,KAAKP,KAAL,CAAWC,SAAX,CAAqBM,GAArB,MAA8B,KAA9B,GAAsC,MAAtC,GAA+C;AAD7C;AAND,KAAd;AASC;;AAEoB,QAAjBK,iBAAiB,GAAG;AACxB,UAAM,KAAKlB,SAAL,EAAN;AACD;;AAWDmB,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACM;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,+BACG;AAAA,0CAAkB,KAAKb,KAAL,CAAWH,IAAX,CAAgBiB,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADN,eAIA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,UAAD;AACA,UAAA,IAAI,EAAE,KAAKd,KAAL,CAAWH,IADjB;AACuB,UAAA,MAAM,EAAE,KAAKQ;AADpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AArDoC;;AAwDvC,eAAef,SAAf","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"../css/ListBands.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import Loading from \"./Loading\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import TableComponent from './TableBands'\r\n\r\n// const ListBands = () => {\r\n//   const [bands, setBands] = useState([]);\r\n//   const [allData, setAllData] = useState(false);  \r\n\r\n\r\n//   useEffect(() => {\r\n//     obtainData();\r\n//   }, []);\r\n\r\n//   const obtainData = async () => {\r\n//     const data = await fetch(\r\n//       \"https://my-json-server.typicode.com/improvein/dev-challenge/db\"\r\n//     );\r\n//     const bandsName = await data.json();\r\n//     setBands(bandsName.bands);\r\n//     setAllData(true);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container-list\">\r\n//       <div id=\"bands-title\">\r\n//         <p>´Total Bands: {bands.length}</p>\r\n//       </div>\r\n//       <fieldset className=\"check-container\">\r\n//         <Form.Group>\r\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Rock\" />\r\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Rock and Roll\" />\r\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Hard Rock\" />\r\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Grunge\" />\r\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Heavy Metal\" />\r\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Power Metal\" />\r\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"Black Metal\" />\r\n//           <Form.Check className=\"check\" type=\"checkbox\" label=\"ProgressMetal\" />\r\n//         </Form.Group>\r\n//       </fieldset>\r\n//       {!allData ? (\r\n//         <Loading />\r\n//       ) : (\r\n//         <div className=\"list-bands\">\r\n//           <ul>\r\n//           <TableComponent data={bands} sortBy={bands.name}/>\r\n//           </ul> \r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ListBands;\r\n\r\n\r\nimport React from 'react'\r\nimport TableBands from './TableBands'\r\n\r\nclass ListBands extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      data:[],\r\n      direction: {\r\n        id:'asc',\r\n        year:'asc',\r\n        name :'asc',\r\n      },\r\n    }\r\n\r\n    this.sortBy = this.sortBy.bind(this)\r\n  }\r\n\r\n  sortBy(key){\r\n    this.setState({\r\n      data: this.state.data.sort( (a, b) => (\r\n        this.state.direction[key] === 'asc'\r\n        ? parseInt(a[key]) - parseInt(b[key])\r\n        : parseInt(b[key]) - parseInt(a[key])\r\n      )),\r\n        direction: {\r\n          [key]: this.state.direction[key] === 'asc' ? 'desc' : 'asc'\r\n      }})\r\n    }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchData()\r\n  }\r\n\r\n  fetchData = async () => {\r\n    let res = await fetch('https://my-json-server.typicode.com/improvein/dev-challenge/bands')\r\n    let data = await res.json()\r\n    this.setState({\r\n      data\r\n    })\r\n  }\r\n\r\n  \r\n  render(){\r\n    return(\r\n      <div className=\"container-list\">\r\n            <div id=\"bands-title\">\r\n               <p>´Total Bands: {this.state.data.length}</p>\r\n             </div>\r\n      <div className=\"page-container\">\r\n        <TableBands\r\n        data={this.state.data} sortBy={this.sortBy} />\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListBands;"]},"metadata":{},"sourceType":"module"}