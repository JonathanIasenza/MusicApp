{"ast":null,"code":"var _jsxFileName = \"E:\\\\BunyRapeer\\\\Programaci\\xF3n\\\\Proyectos JavaScript y React\\\\music-app\\\\music-app\\\\src\\\\components\\\\Bands.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/Bands.css\";\nimport Loading from \"./Loading\";\nimport { Button } from \"react-bootstrap\";\nimport dataImg from './../db/dataImg.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bands = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [infoBands, setInfoBands] = useState([]);\n  const [infoImg, setInfoImg] = useState([]);\n  const [infoAlbums, setInfoAlbums] = useState([]);\n  const [infoGenres, setInfoGenres] = useState([]);\n  const [membersBand, setMembersBand] = useState([]);\n  const [allData, setAllData] = useState(false);\n  const [showBand, setShowBand] = useState(false);\n  useEffect(() => {\n    /*1st fetch*/\n    const obtainDatas = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`);\n      const bands = await data.json();\n      setInfoBands(bands);\n    };\n    /*2nd fetch*/\n\n\n    const obtainMembers = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`);\n      const memb = await data.json();\n      setMembersBand(memb.members);\n      setAllData(true);\n    };\n    /*3rd fetch*/\n\n\n    const obtainAlbums = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/db`);\n      const album = await data.json();\n      setInfoAlbums(album.albums);\n    };\n    /*4th fetch*/\n\n\n    const obtainGenres = async () => {\n      const genre = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/db`);\n      const genres = await genre.json();\n      setInfoGenres(genres.genre);\n    };\n\n    const obtainImg = async () => {\n      const imgData = await fetch(\"../db/dataImg\");\n      const imgDatas = await imgData.json();\n      setInfoImg(imgDatas);\n    };\n\n    obtainImg([]);\n    obtainGenres([]);\n    obtainAlbums([]);\n    obtainDatas([]);\n    obtainMembers([]);\n    setShowBand();\n  }, [id]);\n\n  const showAlbums = () => {\n    setShowBand(true);\n\n    if (showBand === true) {\n      document.getElementById(\"show-h3\").textContent = \"Hide Albums â›”\";\n      document.getElementById(\"show-album\").style.display = \"block\";\n      setShowBand(false);\n    } else if (showBand === false) {\n      document.getElementById(\"show-h3\").textContent = \"Show Albums ðŸ‘€\";\n      document.getElementById(\"show-album\").style.display = \"none\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-bands\",\n    children: !allData ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \"Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 50\n        }, this), infoBands.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 49\n        }, this), infoBands.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 48\n        }, this), infoBands.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \" Country: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 53\n        }, this), infoBands.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: infoImg.images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), infoImg.map(dataId => {\n          if (dataId.id === infoBands.id) {\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: dataId.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 24\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"info-band\",\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), infoGenres.map(genreId => {\n          if (genreId.code === infoBands.genreCode) {\n            return /*#__PURE__*/_jsxDEV(\"h1\", {\n              id: \"genre-name\",\n              children: genreId.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 24\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: infoAlbums.map\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"members\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"members-title\",\n          children: \"Members:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), membersBand.map(member => /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: member.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-album\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-dark\",\n            onClick: () => showAlbums(),\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"show-h3\",\n              children: \"Show Albums \\uD83D\\uDC40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"show-album\",\n            style: {\n              display: \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              id: \"album-title\",\n              className: \"info-band\",\n              children: \"Albums:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), infoAlbums.map(albumId => {\n              if (albumId.bandId === infoBands.id) {\n                return /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"album-names\",\n                  children: albumId.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 28\n                }, this);\n              }\n            }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bands, \"WkLw6pe3FJhjT95zu4nGPyeA+7k=\", false, function () {\n  return [useParams];\n});\n\n_c = Bands;\nexport default Bands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bands\");","map":{"version":3,"sources":["E:/BunyRapeer/ProgramaciÃ³n/Proyectos JavaScript y React/music-app/music-app/src/components/Bands.jsx"],"names":["React","useState","useEffect","useParams","Loading","Button","dataImg","Bands","id","infoBands","setInfoBands","infoImg","setInfoImg","infoAlbums","setInfoAlbums","infoGenres","setInfoGenres","membersBand","setMembersBand","allData","setAllData","showBand","setShowBand","obtainDatas","data","fetch","bands","json","obtainMembers","memb","members","obtainAlbums","album","albums","obtainGenres","genre","genres","obtainImg","imgData","imgDatas","showAlbums","document","getElementById","textContent","style","display","name","year","country","images","map","dataId","genreId","code","genreCode","member","albumId","bandId"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../css/Bands.css\";\r\nimport Loading from \"./Loading\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport dataImg from './../db/dataImg.json'\r\n\r\nconst Bands = () => {\r\n  const { id } = useParams();\r\n  const [infoBands, setInfoBands] = useState([]);\r\n  const [infoImg, setInfoImg] = useState([]);\r\n  const [infoAlbums, setInfoAlbums] = useState([]);\r\n  const [infoGenres, setInfoGenres] = useState([]);\r\n  const [membersBand, setMembersBand] = useState([]);\r\n  const [allData, setAllData] = useState(false);\r\n  const [showBand, setShowBand] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    /*1st fetch*/\r\n    const obtainDatas = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`\r\n      );\r\n\r\n      const bands = await data.json();\r\n      setInfoBands(bands);\r\n    };\r\n\r\n    /*2nd fetch*/\r\n    const obtainMembers = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`\r\n      );\r\n\r\n      const memb = await data.json();\r\n      setMembersBand(memb.members);\r\n      setAllData(true);\r\n    };\r\n\r\n    /*3rd fetch*/\r\n    const obtainAlbums = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/db`\r\n      );\r\n\r\n      const album = await data.json();\r\n      setInfoAlbums(album.albums);\r\n    };\r\n\r\n    /*4th fetch*/\r\n\r\n    const obtainGenres = async () => {\r\n      const genre = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/db`\r\n      );\r\n\r\n      const genres = await genre.json();\r\n      setInfoGenres(genres.genre);\r\n    };\r\n\r\n    const obtainImg = async () => {\r\n      const imgData = await fetch(\"../db/dataImg\");\r\n\r\n      const imgDatas = await imgData.json();\r\n      setInfoImg(imgDatas);\r\n    };\r\n\r\n    obtainImg([]);\r\n    obtainGenres([]);\r\n    obtainAlbums([]);\r\n    obtainDatas([]);\r\n    obtainMembers([]);\r\n    setShowBand();\r\n  }, [id]);\r\n\r\n  const showAlbums = () => {\r\n    setShowBand(true);\r\n    if (showBand === true) {\r\n      document.getElementById(\"show-h3\").textContent = \"Hide Albums â›”\";\r\n      document.getElementById(\"show-album\").style.display = \"block\";\r\n      setShowBand(false);\r\n    } else if (showBand === false) {\r\n      document.getElementById(\"show-h3\").textContent = \"Show Albums ðŸ‘€\";\r\n      document.getElementById(\"show-album\").style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-bands\">\r\n      {!allData ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"container-info\">\r\n          <h1>\r\n            <b className=\"info-band\">Number:</b> <br/>{infoBands.id}\r\n          </h1>\r\n          <h1>\r\n            {\" \"}\r\n            <b className=\"info-band\">Name: </b> <br/>{infoBands.name}\r\n          </h1>\r\n          <h1>\r\n            <b className=\"info-band\">Year:</b> <br/>{infoBands.year}\r\n          </h1>\r\n          <h1>\r\n            <b className=\"info-band\"> Country: </b> <br/>{infoBands.country}\r\n          </h1>\r\n          <h1>\r\n\r\n          <h1>{infoImg.images}</h1>\r\n\r\n            {infoImg.map((dataId) => {\r\n              if(dataId.id === infoBands.id){\r\n                return <h1>{dataId.id}</h1>\r\n              }\r\n            })}\r\n\r\n\r\n            <b className=\"info-band\">Genre:</b>\r\n            {infoGenres.map((genreId) => {\r\n              if (genreId.code === infoBands.genreCode) {\r\n                return <h1 id=\"genre-name\">{genreId.name}</h1>;\r\n              }\r\n            })}\r\n          </h1>\r\n          <br />\r\n          \r\n          <h1>{infoAlbums.map}</h1>\r\n          <br />\r\n          <div className=\"members\">\r\n            <h1 id=\"members-title\">Members:</h1>\r\n            <br />\r\n            {membersBand.map((member) => (\r\n              <h2>\r\n                <ul>\r\n                  <li>{member.name}</li>\r\n                </ul>\r\n              </h2>\r\n            ))}\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\"info-album\">\r\n            <h1>\r\n              <Button className=\"btn btn-dark\" onClick={() => showAlbums()}>\r\n                <h3 id=\"show-h3\">Show Albums ðŸ‘€</h3>\r\n              </Button>\r\n              <br />\r\n              <br />\r\n              <div id=\"show-album\" style={{ display: \"none\" }}>\r\n                <b id=\"album-title\" className=\"info-band\">\r\n                  Albums:\r\n                </b>\r\n                {infoAlbums.map((albumId) => {\r\n                  if (albumId.bandId === infoBands.id) {\r\n                    return <h1 className=\"album-names\">{albumId.name}</h1>;\r\n                  }\r\n                })}\r\n                <br />\r\n              </div>\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bands;\r\n"]},"metadata":{},"sourceType":"module"}