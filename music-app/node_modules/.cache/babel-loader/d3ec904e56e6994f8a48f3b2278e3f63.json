{"ast":null,"code":"var _jsxFileName = \"E:\\\\BunyRapeer\\\\Programaci\\xF3n\\\\Proyectos JavaScript y React\\\\music-app\\\\music-app\\\\src\\\\components\\\\Bands.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/alt-text */\n\n/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/Bands.css\";\nimport Loading from \"./Loading\";\nimport { Button } from \"react-bootstrap\";\nimport dataImg from \"../db/dataImg.json\";\nimport { Animated } from \"react-animated-css\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bands = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [infoBands, setInfoBands] = useState([]);\n  const [infoAlbums, setInfoAlbums] = useState([]);\n  const [infoGenres, setInfoGenres] = useState([]);\n  const [membersBand, setMembersBand] = useState([]);\n  const [allData, setAllData] = useState(false);\n  const [showBand, setShowBand] = useState(false);\n  useEffect(() => {\n    /*1st fetch*/\n    const obtainDatas = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`);\n      const bands = await data.json();\n      setInfoBands(bands);\n    };\n    /*2nd fetch*/\n\n\n    const obtainMembers = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`);\n      const memb = await data.json();\n      setMembersBand(memb.members);\n      setAllData(true);\n    };\n    /*3rd fetch*/\n\n\n    const obtainAlbums = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/db`);\n      const album = await data.json();\n      setInfoAlbums(album.albums);\n    };\n    /*4th fetch*/\n\n\n    const obtainGenres = async () => {\n      const data = await fetch(`https://my-json-server.typicode.com/improvein/dev-challenge/db`);\n      const genres = await data.json();\n      setInfoGenres(genres.genre);\n    };\n\n    obtainGenres([]);\n    obtainAlbums([]);\n    obtainDatas([]);\n    obtainMembers([]);\n    setShowBand();\n  }, [id]);\n\n  const showAlbums = () => {\n    setShowBand(true);\n\n    if (showBand === true) {\n      document.getElementById(\"show-h3\").textContent = \"Hide Albums â›”\";\n      document.getElementById(\"show-album\").style.display = \"block\";\n      setShowBand(false);\n    } else if (showBand === false) {\n      document.getElementById(\"show-h3\").textContent = \"Show Albums ðŸ‘€\";\n      document.getElementById(\"show-album\").style.display = \"none\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-bands\",\n    children: !allData ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Animated, {\n      animationIn: \"fadeIn\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/menu\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), dataImg.map(imgId => {\n          if (imgId.id === infoBands.id) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgId.img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this);\n          }\n        }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"info-band\",\n            children: \"Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 52\n          }, this), infoBands.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"info-band\",\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 51\n          }, this), infoBands.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"info-band\",\n            children: \"Year:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 50\n          }, this), infoBands.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"info-band\",\n            children: \" Country: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 55\n          }, this), infoBands.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"info-band\",\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), infoGenres.map(genreId => {\n            if (genreId.code === infoBands.genreCode) {\n              return /*#__PURE__*/_jsxDEV(\"h1\", {\n                id: \"genre-name\",\n                children: genreId.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 26\n              }, this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: infoAlbums.map\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"members\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"members-title\",\n            children: \"Members:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), membersBand.map(member => /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: member.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-album\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-dark\",\n              onClick: () => showAlbums(),\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                id: \"show-h3\",\n                children: \"Show Albums \\uD83D\\uDC40\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"show-album\",\n              style: {\n                display: \"none\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                id: \"album-title\",\n                className: \"info-band\",\n                children: \"Albums:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), infoAlbums.map(albumId => {\n                if (albumId.bandId === infoBands.id) {\n                  return /*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"album-names\",\n                    children: albumId.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 30\n                  }, this);\n                }\n              }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bands, \"9yZSGGVEFyXz2gdASWVDkmRuShg=\", false, function () {\n  return [useParams];\n});\n\n_c = Bands;\nexport default Bands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bands\");","map":{"version":3,"sources":["E:/BunyRapeer/ProgramaciÃ³n/Proyectos JavaScript y React/music-app/music-app/src/components/Bands.jsx"],"names":["React","useState","useEffect","useParams","Loading","Button","dataImg","Animated","Link","Bands","id","infoBands","setInfoBands","infoAlbums","setInfoAlbums","infoGenres","setInfoGenres","membersBand","setMembersBand","allData","setAllData","showBand","setShowBand","obtainDatas","data","fetch","bands","json","obtainMembers","memb","members","obtainAlbums","album","albums","obtainGenres","genres","genre","showAlbums","document","getElementById","textContent","style","display","map","imgId","img","name","year","country","genreId","code","genreCode","member","albumId","bandId"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../css/Bands.css\";\r\nimport Loading from \"./Loading\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport dataImg from \"../db/dataImg.json\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Bands = () => {\r\n  const { id } = useParams();\r\n  const [infoBands, setInfoBands] = useState([]);\r\n  const [infoAlbums, setInfoAlbums] = useState([]);\r\n  const [infoGenres, setInfoGenres] = useState([]);\r\n  const [membersBand, setMembersBand] = useState([]);\r\n  const [allData, setAllData] = useState(false);\r\n  const [showBand, setShowBand] = useState(false);\r\n\r\n  useEffect(() => {\r\n    /*1st fetch*/\r\n    const obtainDatas = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`\r\n      );\r\n\r\n      const bands = await data.json();\r\n      setInfoBands(bands);\r\n    };\r\n\r\n    /*2nd fetch*/\r\n    const obtainMembers = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/bands/${id}`\r\n      );\r\n\r\n      const memb = await data.json();\r\n      setMembersBand(memb.members);\r\n      setAllData(true);\r\n    };\r\n\r\n    /*3rd fetch*/\r\n    const obtainAlbums = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/db`\r\n      );\r\n\r\n      const album = await data.json();\r\n      setInfoAlbums(album.albums);\r\n    };\r\n\r\n    /*4th fetch*/\r\n\r\n    const obtainGenres = async () => {\r\n      const data = await fetch(\r\n        `https://my-json-server.typicode.com/improvein/dev-challenge/db`\r\n      );\r\n\r\n      const genres = await data.json();\r\n      setInfoGenres(genres.genre);\r\n    };\r\n\r\n    obtainGenres([]);\r\n    obtainAlbums([]);\r\n    obtainDatas([]);\r\n    obtainMembers([]);\r\n    setShowBand();\r\n  }, [id]);\r\n\r\n  const showAlbums = () => {\r\n    setShowBand(true);\r\n    if (showBand === true) {\r\n      document.getElementById(\"show-h3\").textContent = \"Hide Albums â›”\";\r\n      document.getElementById(\"show-album\").style.display = \"block\";\r\n      setShowBand(false);\r\n    } else if (showBand === false) {\r\n      document.getElementById(\"show-h3\").textContent = \"Show Albums ðŸ‘€\";\r\n      document.getElementById(\"show-album\").style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-bands\">\r\n      {!allData ? (\r\n        <Loading />\r\n      ) : (\r\n        <Animated animationIn=\"fadeIn\">\r\n          {\" \"}\r\n          <div className=\"container-info\">\r\n\r\n            <div className=\"button-container\">\r\n              <Button><Link to=\"/menu\">Back</Link></Button>\r\n            </div>\r\n\r\n            {dataImg.map((imgId) => {\r\n              if (imgId.id === infoBands.id) {\r\n                return (\r\n                  <div className=\"img-container\">\r\n                    <img src={imgId.img} />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n\r\n            <br />\r\n\r\n            <h1>\r\n              <b className=\"info-band\">Number:</b> <br />\r\n              {infoBands.id}\r\n            </h1>\r\n            <h1>\r\n              {\" \"}\r\n              <b className=\"info-band\">Name: </b> <br />\r\n              {infoBands.name}\r\n            </h1>\r\n            <h1>\r\n              <b className=\"info-band\">Year:</b> <br />\r\n              {infoBands.year}\r\n            </h1>\r\n            <h1>\r\n              <b className=\"info-band\"> Country: </b> <br />\r\n              {infoBands.country}\r\n            </h1>\r\n            <h1>\r\n              <b className=\"info-band\">Genre:</b>\r\n              {infoGenres.map((genreId) => {\r\n                if (genreId.code === infoBands.genreCode) {\r\n                  return <h1 id=\"genre-name\">{genreId.name}</h1>;\r\n                }\r\n              })}\r\n            </h1>\r\n            <br />\r\n\r\n            <h1>{infoAlbums.map}</h1>\r\n            <br />\r\n            <div className=\"members\">\r\n              <h1 id=\"members-title\">Members:</h1>\r\n              <br />\r\n              {membersBand.map((member) => (\r\n                <h2>\r\n                  <ul>\r\n                    <li>{member.name}</li>\r\n                  </ul>\r\n                </h2>\r\n              ))}\r\n            </div>\r\n            <br />\r\n\r\n            <div className=\"info-album\">\r\n              <h1>\r\n                <Button className=\"btn btn-dark\" onClick={() => showAlbums()}>\r\n                  <h3 id=\"show-h3\">Show Albums ðŸ‘€</h3>\r\n                </Button>\r\n                <br />\r\n                <br />\r\n                <div id=\"show-album\" style={{ display: \"none\" }}>\r\n                  <b id=\"album-title\" className=\"info-band\">\r\n                    Albums:\r\n                  </b>\r\n                  {infoAlbums.map((albumId) => {\r\n                    if (albumId.bandId === infoBands.id) {\r\n                      return <h1 className=\"album-names\">{albumId.name}</h1>;\r\n                    }\r\n                  })}\r\n                  <br />\r\n                </div>\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </Animated>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bands;\r\n"]},"metadata":{},"sourceType":"module"}