{"ast":null,"code":"var _jsxFileName = \"E:\\\\BunyRapeer\\\\Programaci\\xF3n\\\\Proyectos JavaScript y React\\\\music-app\\\\music-app\\\\src\\\\components\\\\ListBands.jsx\";\n//       {!allData ? (\n//         <Loading />\n//       ) : (\n//         <div className=\"list-bands\">\n//           <ul>\n//           <TableComponent data={bands} sortBy={bands.name}/>\n//           </ul> \n//         </div>\n//       )}\n//     </div>\n//   );\n// };\nimport React from 'react';\nimport TableBands from './TableBands';\nimport Loading from \"./Loading\";\nimport Form from \"react-bootstrap/Form\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListBands extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = async () => {\n      let res = await fetch('https://my-json-server.typicode.com/improvein/dev-challenge/bands');\n      let data = await res.json();\n      this.setState({\n        data\n      });\n    };\n\n    this.state = {\n      data: [],\n      allData: false,\n      direction: {\n        id: 'asc',\n        year: 'asc',\n        name: 'asc'\n      }\n    };\n    this.sortBy = this.sortBy.bind(this);\n  }\n\n  sortBy(key) {\n    this.setState({\n      data: this.state.data.sort((a, b) => this.state.direction[key] === 'asc' ? parseInt(a[key]) - parseInt(b[key]) : parseInt(b[key]) - parseInt(a[key])),\n      direction: {\n        [key]: this.state.direction[key] === 'asc' ? 'desc' : 'asc'\n      }\n    });\n  }\n\n  async componentDidMount() {\n    await this.fetchData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bands-title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xB4Total Bands: \", this.state.data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"check-container\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Rock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Rock and Roll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Hard Rock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Grunge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Heavy Metal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Power Metal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"Black Metal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"check\",\n            type: \"checkbox\",\n            label: \"ProgressMetal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-container\",\n        children: this.allData ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(TableBands, {\n          data: this.state.data,\n          sortBy: this.sortBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ListBands;","map":{"version":3,"sources":["E:/BunyRapeer/Programaci√≥n/Proyectos JavaScript y React/music-app/music-app/src/components/ListBands.jsx"],"names":["React","TableBands","Loading","Form","ListBands","Component","constructor","props","fetchData","res","fetch","data","json","setState","state","allData","direction","id","year","name","sortBy","bind","key","sort","a","b","parseInt","componentDidMount","render","length"],"mappings":"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","sourcesContent":["\r\n//       {!allData ? (\r\n//         <Loading />\r\n//       ) : (\r\n//         <div className=\"list-bands\">\r\n//           <ul>\r\n//           <TableComponent data={bands} sortBy={bands.name}/>\r\n//           </ul> \r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\nimport React from 'react'\r\nimport TableBands from './TableBands'\r\nimport Loading from \"./Loading\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass ListBands extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      data:[],\r\n      allData: false,\r\n      direction: {\r\n        id:'asc',\r\n        year:'asc',\r\n        name :'asc',\r\n      },\r\n    }\r\n\r\n    this.sortBy = this.sortBy.bind(this)\r\n  }\r\n\r\n  sortBy(key){\r\n    this.setState({\r\n      data: this.state.data.sort( (a, b) => (\r\n        this.state.direction[key] === 'asc'\r\n        ? parseInt(a[key]) - parseInt(b[key])\r\n        : parseInt(b[key]) - parseInt(a[key])\r\n      )),\r\n        direction: {\r\n          [key]: this.state.direction[key] === 'asc' ? 'desc' : 'asc'\r\n      }})\r\n    }\r\n\r\n  async componentDidMount() {\r\n    await this.fetchData()\r\n  }\r\n\r\n\r\n  fetchData = async () => {\r\n    let res = await fetch('https://my-json-server.typicode.com/improvein/dev-challenge/bands')\r\n    let data = await res.json()\r\n    this.setState({\r\n      data\r\n    })\r\n  }\r\n\r\n  \r\n  render(){\r\n    return(\r\n      <div className=\"container-list\">\r\n            <div id=\"bands-title\">\r\n               <p>¬¥Total Bands: {this.state.data.length}</p>\r\n             </div>\r\n             <fieldset className=\"check-container\">\r\n         <Form.Group>\r\n           <Form.Check className=\"check\" type=\"checkbox\" label=\"Rock\" />\r\n           <Form.Check className=\"check\" type=\"checkbox\" label=\"Rock and Roll\" />\r\n           <Form.Check className=\"check\" type=\"checkbox\" label=\"Hard Rock\" />\r\n           <Form.Check className=\"check\" type=\"checkbox\" label=\"Grunge\" />\r\n           <Form.Check className=\"check\" type=\"checkbox\" label=\"Heavy Metal\" />\r\n           <Form.Check className=\"check\" type=\"checkbox\" label=\"Power Metal\" />\r\n           <Form.Check className=\"check\" type=\"checkbox\" label=\"Black Metal\" />\r\n           <Form.Check className=\"check\" type=\"checkbox\" label=\"ProgressMetal\" />\r\n         </Form.Group>\r\n       </fieldset>\r\n      \r\n      <div className=\"page-container\">\r\n        {this.allData ? ( <Loading/> ) : (\r\n        <TableBands\r\n        data={this.state.data} sortBy={this.sortBy} />\r\n      )}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListBands;"]},"metadata":{},"sourceType":"module"}